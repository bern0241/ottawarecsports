/**
 * Last updated: 2023-04-04
 *
 * Author(s):
 * Justin Bernard <bern0241@algonquinlive.com>
 * Verity Stevens <stev0298@algonquinlive.com>
 */

 import React, { useState, useEffect } from 'react';
 import Head from 'next/head';
 import { IconCirclePlus } from '@tabler/icons-react';
 import AWS from 'aws-sdk';
 import { useUser } from '@/context/userContext';
 //Components
 import SuccessMessage from '@/components/common/SuccessMessage';
 import ACPUserRow from '@/components/admin-portal/ACPUserRow';
 import ACPNewUserModal from '@/components/admin-portal/ACPNewUserModal';
 import ACPSearchUserBar from '@/components/admin-portal/ACPSearchUserBar';
//  import { listLocations } 
 
 export default function LocationsPage() {
    const [user, setUser, authRoles, setAuthRoles] = useUser();
    const [locations, setLocations] = useState([]);

     useEffect(() => {
        fetchLocations();
     }, []);

     async function fetchLocations() {
        const locationsFetch = await API.graphql({ 
            query: listLocations 
        });
        setLocations(locationsFetch.data.listLocations.items);
      }
 
    
 
     if (!user || (!authRoles.includes('Admin') && !authRoles.includes('Owner'))) {
         return (
             <div className="flex items-center justify-center h-[50vh]">
                 <h2>You do not have access for this page</h2>
             </div>
         );
     }
 
     return (
         <>
             <Head>
                 <title>ORS - AdminPortal</title>
                 <meta name="description" content="Generated by create next app" />
                 <meta name="viewport" content="width=device-width, initial-scale=1" />
                 <link rel="icon" href="/images/ORS-Logo.png" />
             </Head>
 
             <main className="p-8">
                 <ACPSearchUserBar setSearchResult={setSearchResult} />
 
                 <section className="flex flex-col w-full h-auto bg-white border border-brand-neutral-300 rounded-md">
                     <div className="flex justify-between py-3 px-5 border-b border-brand-neutral-300">
                         <h1 className="text-xl self-center">Users</h1>
                         <button
                             className="flex items-center justify-between py-2 px-6 text-white font-medium text-sm rounded-3xl bg-blue-900 hover:bg-blue-800"
                             onClick={() => setAddUserModal(true)}
                         >
                             <IconCirclePlus className="mr-2 h-5 w-5" />
                             Add a User
                         </button>
                     </div>
 
                     <table className="mb-32 table-auto">
                         <thead className="bg-brand-neutral-100">
                             <tr className="text-left">
                                 <th className="py-3 px-5 text-sm font-light w-2/6">
                                     <div className="flex">Name</div>
                                 </th>
                                 <th className="py-3 px-5 text-sm font-light w-2/6">
                                     <div className="flex">Role</div>
                                 </th>
                                 <th className="py-3 px-5 text-sm font-light w-2/6">
                                     <div className="flex">Leagues</div>
                                 </th>
                                 <th className="py-3 px-5 text-sm font-light">Action</th>
                             </tr>
                         </thead>
                         <tbody>
                             {users &&
                                 users
                                     .filter((user) => {
                                         const searchItem = searchResult.toLocaleLowerCase();
                                         const v = `${user.Attributes.find((o) => o.Name === 'name')[
                                             'Value'
                                         ].toLocaleLowerCase()} ${user.Attributes.find(
                                             (o) => o.Name === 'family_name'
                                         )['Value'].toLocaleLowerCase()}`;
                                         if (!searchItem) return true;
                                         return v.startsWith(searchItem);
                                     })
                                     .map((user, index) => (
                                         <ACPUserRow
                                             key={user.Username}
                                             user={user}
                                             index={index}
                                             handleSave={handleSave}
                                         />
                                     ))}
                             {/* {users && users.map((user, index) => (
                                 <ACPUserRow
                                     key={user.Username}
                                     user={user}
                                     index={index}
                                     handleSave={handleSave}
                                 />
                             ))} */}
                         </tbody>
                     </table>
                 </section>
             </main>
             {/* Add User modal */}
             {addUserModal && (
                 <ACPNewUserModal
                     setOpenModal={setAddUserModal}
                     setSuccessMessage={setSuccessMessage}
                 />
             )}
             {/* Delete User modal */}
             {addUserModal && <ACPNewUserModal setOpenModal={setAddUserModal} />}
             {/* Success Message */}
             {successMessage && (
                 <SuccessMessage
                     title={'Success!'}
                     message={'User has been successfully created!'}
                     setDisplay={setDisplayNewUserSuccess}
                 />
             )}
         </>
     );
 }
 